{"version":3,"sources":["_actions/authAction.js","_actions/types.js","components/ProfileMenu.js","components/NavBar.js","components/Home.js","components/Register.js","components/Login.js","components/Profile.js","App.js","_reducers/authReducer.js","_reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["checkAuth","dispatch","axios","get","then","res","type","payload","username","data","isAuth","catch","err","mapDispatchToProps","logout","connect","props","_useState","useState","_useState2","Object","slicedToArray","show","setShow","react_default","a","createElement","onMouseOver","onMouseLeave","Link","to","id","href","className","onClick","window","location","state","auth","useEffect","components_ProfileMenu","Home","Component","reg","email","password","post","userExists","setUserName","_useState3","_useState4","setEmail","_useState5","_useState6","setPassword","_useState7","_useState8","passwordConf","setPasswordConf","_useState9","_useState10","errAll","setErrAll","_useState11","_useState12","errPass","setErrPass","role","htmlFor","name","onChange","e","target","value","lg","badLogin","noMatch","setNoMatch","console","log","App","BrowserRouter","components_NavBar","Switch","Route","exact","path","component","Login","Register","Profile","Redirect","from","initialState","combineReducers","arguments","length","undefined","action","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","Boolean","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3490ae65.chunk.js","sourcesContent":["import { LOGIN ,REG,CHECK_AUTH,LOG_OUT} from './types';\r\nimport axios from 'axios'\r\n\r\n\r\nexport const lg=(username,password)=>dispatch=>{\r\n   axios.post('api/auth', {\r\n    username,\r\n    password\r\n  })\r\n  .then(res=> {\r\n    \r\n    return  dispatch({\r\n      type: LOGIN,\r\n      payload:{\r\n        isAuth:true,\r\n        badLogin:false\r\n      }\r\n            })\r\n    \r\n  })\r\n  .catch(err=> {\r\n \r\n     return dispatch({\r\n      type: LOGIN,\r\n      payload:{\r\n        isAuth:false,\r\n        badLogin:true\r\n      }\r\n        })\r\n    \r\n  });\r\n    \r\n}\r\n\r\nexport const reg=(username,email,password)=>dispatch=>{\r\n  axios.post('api/register',{\r\n    username,\r\n    email,\r\n    password\r\n  })\r\n  .then(res=> {\r\n   \r\n   return dispatch({\r\n    type: REG,\r\n    payload:false\r\n      })\r\n  })\r\n  .catch(err=> {\r\n \r\n    return dispatch({\r\n      type: REG,\r\n      payload:true\r\n        })\r\n    \r\n  });\r\n\r\n}\r\n\r\nexport const checkAuth=()=>dispatch=>{\r\n  axios.get('api/profile')\r\n  .then(res=> {\r\n   \r\n   return dispatch({\r\n    type: CHECK_AUTH,\r\n    payload:{\r\n      username:res.data,\r\n      isAuth:true\r\n    }\r\n      })\r\n  })\r\n  .catch(err=> {\r\n \r\n    return dispatch({\r\n      type: CHECK_AUTH,\r\n      payload:{\r\n        username:null,\r\n        isAuth:false\r\n      }\r\n         })\r\n    \r\n  });\r\n\r\n}\r\n\r\nexport const logout=()=>dispatch=>{\r\n  axios.get('api/profile/logout')\r\n  .then(res=> {\r\n   \r\n   return dispatch({\r\n    type: LOG_OUT,\r\n    payload:false\r\n      })\r\n  })\r\n  .catch(err=> {\r\n });\r\n\r\n}\r\n\r\n","export const LOGIN = 'LOGIN';\r\nexport const REG = 'REG';\r\nexport const CHECK_AUTH = 'CHECK_AUTH';\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\n","import React, { useState} from 'react'\r\nimport  '../styles/ProfileMenu.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logout} from '../_actions/authAction';\r\n\r\nconst ProfileMenu=props =>{\r\n  const[show,setShow]=useState(false)\r\n\r\n  const logout = ()=>{\r\n    props.logout();\r\n    window.location.href=\"/login\"\r\n  }\r\n\r\n  const showMenu = ()=>{\r\n    setShow(true)\r\n  }\r\n  const hideMenu = ()=>{\r\n    setShow(false)\r\n  }\r\n    return (\r\n      \r\n      <div onMouseOver={showMenu} onMouseLeave={hideMenu} >\r\n      <Link to=\"/profile\" >Profile</Link>\r\n      {show?<div id=\"acc-menu\" >\r\n      <a href=\"/profile\" className=\"menuRow\">My Account</a>\r\n      <a  className=\"logout\" onClick={logout}>Log out</a>\r\n     \r\n  </div>:null}\r\n  </div>\r\n    )\r\n  }\r\n  ProfileMenu.propTypes = {\r\n    logout: PropTypes.func.isRequired\r\n  };\r\n\r\n  const mapDispatchToProps =  ({\r\n    logout:() =>  logout() \r\n    })\r\n   \r\n    \r\n    export default connect(null, mapDispatchToProps)(ProfileMenu);","import React, {useEffect} from 'react'\r\nimport ProfileMenu from './ProfileMenu'\r\nimport '../styles/NavBar.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {checkAuth} from '../_actions/authAction';\r\n\r\nconst NavBar = props => {\r\n    useEffect(()=>{  \r\n         props.checkAuth(); \r\n},[props.isAuth]);\r\n\r\n    return (\r\n        <div className=\"NavBar\">\r\n\r\n            <div className=\"LeftNav\">\r\n                <Link to=\"/home\">Home</Link>\r\n\r\n            </div>\r\n\r\n            <div className=\"RightNav\">\r\n\r\n                {props.isAuth\r\n                    ? <ProfileMenu/>\r\n                    : <Link to=\"/login\">Login</Link>}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nNavBar.propTypes = {\r\n    checkAuth: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = ({\r\n    checkAuth: () => checkAuth()\r\n})\r\nconst mapStateToProps = state => ({isAuth: state.auth.isAuth})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Home extends Component {\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n      <h1>I'm Home</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {useState,useEffect} from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {reg} from '../_actions/authAction';\r\n\r\nconst Register=props=> {\r\n    const [username,setUserName] = useState(null);\r\n    const [email,setEmail] = useState(null);\r\n    const [password,setPassword] = useState(null);\r\n    const [passwordConf,setPasswordConf] = useState(null);\r\n    const [errAll,setErrAll] = useState(null);\r\n    const [errPass,setErrPass] = useState(null);\r\n        \r\n         if (props.userExists == false){\r\n            window.location.href=\"/login\"\r\n        }else if (props.isAuth == true){\r\n            window.location.href=\"/profile\"\r\n        }\r\n        \r\n    \r\n    \r\n    const handleUsername = (e)=>{\r\n        setUserName(e.target.value);\r\n    }\r\n    const handleEmail = (e)=>{\r\n        setEmail(e.target.value);\r\n    }\r\n    const handlePassword = (e)=>{\r\n        setPassword(e.target.value);\r\n    }\r\n    const handlePasswordConf = (e)=>{\r\n        setPasswordConf(e.target.value);\r\n    }\r\n\r\n   \r\n\r\n\r\n    const register =   ()=>{\r\n        if(username && email && password && passwordConf){\r\n            setErrAll(false);\r\n            if(password == passwordConf){\r\n                 props.reg(username,email,password);\r\n                \r\n                \r\n            }else{\r\n                setErrPass(true);\r\n            }\r\n        }else{\r\n            setErrAll(true);\r\n           \r\n        }\r\n    }\r\n        return (\r\n            <div className=\"reg-container\">\r\n           \r\n            <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">Register</div>\r\n                            <div className=\"card-body\">\r\n                            {errAll? <div className=\"alert alert-danger\" role=\"alert\" id=\"alert\"> All fielld must be field</div>: null}\r\n                            {errPass? <div className=\"alert alert-danger\" role=\"alert\" id=\"alert\"> Passwords doesn't match</div>: null}\r\n                            {props.userExists? <div className=\"alert alert-danger\" role=\"alert\" id=\"alert\"> User already exists</div>:null}\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"username\" className=\"col-md-4 col-form-label text-md-right\">Username</label>\r\n                                    <div className=\"col-md-6\">\r\n                                        <input \r\n                                        type=\"text\"  \r\n                                        className=\"form-control\" \r\n                                        name=\"username\"\r\n                                        onChange={handleUsername}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"email\" className=\"col-md-4 col-form-label text-md-right\">E-Mail Address</label>\r\n                                    <div className=\"col-md-6\">\r\n                                        <input \r\n                                        type=\"text\"  \r\n                                        className=\"form-control\"\r\n                                        name=\"email\"\r\n                                        onChange={handleEmail}\r\n                                         />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"password\" className=\"col-md-4 col-form-label text-md-right\">Password</label>\r\n                                    <div className=\"col-md-6\">\r\n                                        <input \r\n                                        type=\"password\" \r\n                                        id=\"password\" \r\n                                        className=\"form-control\" \r\n                                        name=\"password\"\r\n                                        onChange={handlePassword}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"passwordConf\" className=\"col-md-4 col-form-label text-md-right\">Password confirmation</label>\r\n                                    <div className=\"col-md-6\">\r\n                                        <input \r\n                                        type=\"password\" \r\n                                        id=\"passwordConf\" \r\n                                        className=\"form-control\"\r\n                                        onChange={handlePasswordConf}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 offset-md-4\">\r\n                                    <button \r\n                                    type=\"submit\" \r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={register}\r\n                                    >\r\n\r\n                                        Register\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n\r\n            \r\n            \r\n            </div>\r\n\r\n        )\r\n    \r\n}\r\nRegister.propTypes = {\r\n    reg: PropTypes.func.isRequired,\r\n   \r\n};\r\n\r\nconst mapDispatchToProps = ({\r\n    reg: (username,email,password) => reg(username,email,password)\r\n})\r\nconst mapStateToProps = state => ({\r\n    userExists: state.auth.userExists,\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","import React, {useState, useEffect} from 'react'\r\nimport '../styles/Login.css'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {lg, checkAuth} from '../_actions/authAction';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Login = props => {\r\n    const [username,\r\n        setUserName] = useState(null);\r\n    const [password,\r\n        setPassword] = useState(null);\r\n    const [noMatch,\r\n        setNoMatch] = useState(null);\r\n\r\n        if(props.isAuth == true){\r\n           window.location.href=\"/profile\"\r\n        }\r\n\r\n    const handleName = (e) => {\r\n        setUserName(e.target.value);\r\n\r\n    }\r\n    const handlePass = (e) => {\r\n        setPassword(e.target.value);\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    const login = () => {\r\n        if (username && password) {\r\n            props.lg(username, password)\r\n           \r\n        } else {\r\n         setNoMatch(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"login-container\">\r\n        \r\n            <div className=\"header\">\r\n                <div className=\"image\"></div>\r\n\r\n                \r\n                {props.badLogin || noMatch? <div className=\"errMsg\">Incorrect username or password</div>: null}\r\n\r\n            </div >\r\n\r\n            <div className=\"main\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h3>Login</h3>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"username\">Email address</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"username\"\r\n                                        onChange={handleName}/>\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password\"\r\n                                        onChange={handlePass}/>\r\n\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-primary\" onClick={login}>Login</button>\r\n                                <div className=\"reg-link\">\r\n                                New Here?\r\n                                <Link  to=\"/register\"  >Register</Link>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"footer\"></div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nLogin.propTypes = {\r\n    lg: PropTypes.func.isRequired,\r\n    checkAuth: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = ({\r\n    lg: (username, password) => lg(username, password),\r\n    checkAuth: () => checkAuth()\r\n})\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth,\r\n    badLogin:state.auth.badLogin\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { useEffect } from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuth} from '../_actions/authAction';\r\n\r\n const Profile = props => {\r\n  if(props.isAuth == false || null){\r\n    window.location.href=\"/login\"\r\n  }\r\n \r\n     return (\r\n      <div>\r\n       {props.isAuth?\r\n       <div><h3>Hi</h3>{props.username}</div>\r\n       :null }\r\n      \r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\nProfile.propTypes = {\r\n  checkAuth: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nconst mapDispatchToProps =  ({\r\ncheckAuth:() =>  checkAuth() \r\n})\r\nconst mapStateToProps = state=>({\r\n  username:state.auth.username,\r\n  isAuth:state.auth.isAuth\r\n} )\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route,Switch,Redirect} from \"react-router-dom\";\n\n\n\nimport NavBar from './components/NavBar'\nimport Home from './components/Home'\nimport Register from './components/Register'\nimport Login from './components/Login'\nimport Profile from './components/Profile'\n\n\n\n\n\nconst App = props=> {\n \n\n\n   \n    return (\n  <Router >\n    <div className=\"app\">\n      <div >\n       <NavBar />\n       </div>      \n        <div>\n        <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/login' component={Login} />\n        <Route path='/register' component={Register} />\n        <Route path='/profile' component={Profile} />\n         <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n        </div>\n      </div>\n  </Router>\n    \n    );\n  \n}\n\n\n\nexport default App;\n\n","import { LOGIN,REG, CHECK_AUTH,LOG_OUT } from '../_actions/types';\r\n\r\nconst initialState = {\r\n    isAuth:null,\r\n    username:null,\r\n    email:null,\r\n    password:null,\r\n    userExists:null,\r\n    badLogin:null\r\n    \r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        \r\n        isAuth:action.payload.isAuth,\r\n        badLogin:action.payload.badLogin\r\n      }\r\n      case REG:\r\n      return {\r\n        ...state,\r\n        userExists: action.payload\r\n      }\r\n      case CHECK_AUTH:\r\n      return {\r\n        ...state,\r\n        username: action.payload.username,\r\n        isAuth:action.payload.isAuth\r\n      }\r\n      case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        \r\n        isAuth:action.payload\r\n      }\r\n      \r\n\r\n   \r\n   \r\n    default:\r\n      return state;\r\n  }\r\n\r\n  \r\n}","import { combineReducers } from 'redux';\r\n\r\nimport authReducer from './authReducer';\r\n\r\n\r\n\r\nexport default combineReducers({\r\n  auth: authReducer\r\n  \r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './_reducers/index';\r\n\r\n\r\n\r\n\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\n\r\n\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\n\n// console.log(store.getState());\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>,\ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}